name: 每日更新EPG数据

on:
  schedule:
    - cron: '30 6 * * *'  # 每天UTC时间0点和12点运行 (对应北京时间8点和20点)
  workflow_dispatch:  # 允许手动触发
  push:
    branches:
      - master  # 主分支名称可能是master
      - main    # 或者是main

jobs:
  update-epg:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 明确设置写入内容的权限
    
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # 获取完整历史记录
        
      - name: 显示仓库信息
        run: |
          echo "当前分支: $(git branch --show-current)"
          echo "所有分支: $(git branch -a)"
          echo "远程分支: $(git branch -r)"
          echo "当前目录: $(pwd)"
          ls -la
        
      - name: 设置Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          
      - name: 安装依赖
        run: |
          python -m pip install --upgrade pip
          pip install requests
          
      - name: 下载EPG数据和JSON信息
        env:
          EPG_URL: ${{ secrets.EPG_URL }}
          JSON_URL: ${{ secrets.JSON_URL }}
        run: python update_epg.py
        
      - name: 检查更改
        id: check_changes
        run: |
          git status --porcelain
          if [[ -n $(git status --porcelain) ]]; then
            echo "changes=true" >> $GITHUB_OUTPUT
            echo "检测到以下更改:"
            git status
          else
            echo "changes=false" >> $GITHUB_OUTPUT
            echo "没有检测到更改"
          fi
          
      - name: 提交更改
        if: steps.check_changes.outputs.changes == 'true'
        run: |
          git config --global user.name 'GitHub Actions'
          git config --global user.email 'actions@github.com'
          git add pl.xml.gz pl.json README.md
          git commit -m "自动更新EPG数据和信息 $(date +'%Y-%m-%d')"
          
          # 获取当前分支名称
          CURRENT_BRANCH=$(git branch --show-current)
          if [ -z "$CURRENT_BRANCH" ]; then
            # 如果当前处于分离HEAD状态，则推送到默认分支
            CURRENT_BRANCH=$(git remote show origin | grep 'HEAD branch' | cut -d' ' -f5)
          fi
          echo "推送到分支: $CURRENT_BRANCH"
          
          # 推送到当前分支
          git push origin HEAD:$CURRENT_BRANCH 
